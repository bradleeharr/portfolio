{"componentChunkName":"component---src-pages-blog-markdown-remark-frontmatter-slug-jsx","path":"/blog/my-first-blog-post/","result":{"data":{"markdownRemark":{"html":"<p>For a while, I've wanted to create a blog to develop my own personal understanding of concepts through communicating them on a set plaform.</p>\n<p>After spending some time hacking through making my own website in HTML and CSS, I ended up being unsatisfied. This approach was laborious and ended up taking extra time to format each tag and style. As I started to add even a few extra pages, the upkeep started to increase. To keep with the increased breadth of possible features and designs, being able to create a website more \"modern,\" a better workflow was required.</p>\n<p>I moved on to using <a href=\"https://react.dev/\"><strong>React</strong></a> which immediately was much cleaner to use, being more dedicated toward the features and reactivity of modern web design.</p>\n<p>Though for the purpose of a blog, I still did not want to have to write HTML and CSS every time I wanted to write a short blurb. What I found as a solution was the ability to write posts in Markdown and then have them automatically formatted into a page. This feature is fairly easily able to be done through the React-based Framework <a href=\"https://www.gatsbyjs.com/\"><strong>Gatsby</strong></a> and using their plugin <a href=\"https://www.gatsbyjs.com/plugins/gatsby-transformer-remark/\"><em>gatsby-transformer-remark</em></a></p>\n<p>A bonus feature that I found in Gatsby is the ability to easily use even LaTeX in Markdown directly through another plugin, <a href=\"https://www.gatsbyjs.com/plugins/gatsby-remark-katex/\"><em>gatsby-remark-katex</em></a>.</p>\n<p>To add this specific feaure, it took me personally a few hours of configuration and rebuilding to get this setup to work.</p>\n<p>Now, smoothly and surely, I can add equations to markdown and implement them as posts, like this current post:</p>\n<h1>Example:</h1>\n<blockquote>\n<p><strong>Inline Equation</strong>:\r\nAn equation can look like <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>e</mi><mrow><mn>2</mn><mi>π</mi><mi>i</mi></mrow></msup><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">e^{2\\pi i} = 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8247em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">πi</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></span></p>\n<blockquote>\n<p>Wrap a statement in a single '$' in order to create an inline equation.</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<pre><code>An equation can look like $e^{2*\\pi*i} = 1$\r\n\n</code></pre>\n</blockquote>\n</blockquote>\n<blockquote>\n<p><strong>Block equation</strong>:</p>\n<div class=\"math math-display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>Q</mi><mo>=</mo><mfrac><mn>1</mn><mrow><mo stretchy=\"false\">(</mo><mi>k</mi><mi>a</mi><msup><mo stretchy=\"false\">)</mo><mn>3</mn></msup></mrow></mfrac><mo>+</mo><mfrac><mn>1</mn><mrow><mi>k</mi><mi>a</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">Q = \\frac{1}{(ka)^3} + \\frac{1}{ka}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">Q</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.2574em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">ka</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0074em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ka</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></div>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>Wrap a statement in '$$' in order to create a block equation. Note the need for the spacing before and after the starting and ending $$.</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<pre><code>$$\r\nQ = \\frac{1}{(ka)^3} + \\frac{1}{ka} \r\n$$\n</code></pre>\n</blockquote>\n</blockquote>\n<h1>Set-up Guide</h1>\n<p>To potentially streamline the process for another person, I reason that a detailed quick set-up guide may be useful.</p>\n<ul>\n<li><strong>1. Installing Node.js, React, KaTeX, and Gatsby</strong></li>\n</ul>\n<p>First, you should install the required runtime, Node.js:</p>\n<p>Download <a href=\"https://nodejs.org/en/download\">Node.js</a></p>\n<p>Using npm, install Gatsby globally:</p>\n<p><code>npm install -g gatsby-cli</code></p>\n<p>Now, create a project and install the necessary plugins KaTeX, <em>gatsby-transformer-remark</em> and <em>gatsby-remark-katex</em>:</p>\n<p>In a terminal, navigate to the directory you want to start a project in and enter:</p>\n<p><code>gatsby new projectname</code></p>\n<p>Followed by</p>\n<p><code>cd projectname</code></p>\n<p>to move into the project directory.</p>\n<p>Now install <em>gatsby-transformer-remark</em>, <em>gatsby-remark-katex</em>, and katex:</p>\n<p><code>npm install gatsby-source-filesystem</code></p>\n<p><code>npm install gatsby-transformer-remark gatsby-remark-katex katex</code></p>\n<p><code>npm install remark-math rehype-katex</code></p>\n<p>Then, verify that the project starts correctly:</p>\n<p><code>gatsby develop</code></p>\n<p>You should then be able to visit the sample page at <a href=\"http://localhost:8000/\">http://localhost:8000/</a></p>\n<p>Now that a new gatsby project is set up, the next step is to edit the configuration files, add markdown pages, and create a javascript template:\r\nYou should have a suitable text editor program, like <a href=\"https://code.visualstudio.com/\">Visual Studio Code</a>.</p>\n<ul>\n<li><strong>3. Configuring gatsby-config.js</strong></li>\n</ul>\n<p>The gatsby-config.js should be stored in the root of your new project directory. Edit this file</p>\n<p>Your 'gatsby-source-filesystem', should be configured to the path that your markdown files will be stored.\r\nYou should also add the plugins 'gatsby-transformer-remark' and 'gatsby-remark-katex'.</p>\n<p>An example is shown below:</p>\n<p><strong>gatsby-config.js</strong></p>\n<pre><code>/**\r\n * @type {import('gatsby').GatsbyConfig}\r\n */\r\nmodule.exports = {\r\n  siteMetadata: {\r\n    title: `Gatsby KaTeX Starter`,\r\n    description: `Configuration with Remark and KaTeX.`,\r\n    author: `@gatsbyjs`,\r\n    siteUrl: `https://gatsbystarterdefaultsource.gatsbyjs.io/`,\r\n  },\r\n  plugins: [\r\n  {\r\n      resolve: \"gatsby-source-filesystem\",\r\n      options: {\r\n        path: `${__dirname}/src/content/`,\r\n    },\r\n  },\r\n  {\r\n    resolve: \"gatsby-transformer-remark\",\r\n    options: {\r\n      excerpt_separator: `&#x3C;!-- end -->`,\r\n      plugins: [\r\n        {\r\n          resolve: \"gatsby-remark-katex\",\r\n          options: {\r\n            strict: \"ignore\"\r\n          }\r\n        },\r\n      ]\r\n    }\r\n  },\r\n  ]\r\n}\n</code></pre>\n<ul>\n<li><strong>4. Writing Markdown LaTeX</strong></li>\n</ul>\n<p>Now, in the src/content folder, [or the path that you configure your file root for the gatsby-source-filesystem], add a markdown file that uses LaTeX.\r\nHere is an example:</p>\n<p><strong>src/content/blog-post-1.md</strong></p>\n<pre><code>---\r\nslug: \"my-first-blog-post\"\r\ndate: \"2023-08-25\"\r\ntitle: \"Gatsby and KaTeX: Using Markdown to create posts with LaTeX format supported\"\r\n---\r\nTest Markdown KaTeX:\r\n\r\nEuler's identity $e^{i\\pi} = -1$ comes from the more general equation:\r\n\r\n$$\r\ne^{ix} = \\frac{1}{2}[\\cos{x} + i\\sin{x}]\r\n$$\n</code></pre>\n<ul>\n<li><strong>5. Writing a template</strong></li>\n</ul>\n<p>Finally, you need to have a javascript template for your markdown files.\r\nAn example:\r\n<strong>pages/blog/{markdownRemark.frontmatter__slug}.jsx</strong></p>\n<pre><code>import React, { useEffect } from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport katex from \"katex\";\r\nimport \"katex/dist/katex.min.css\"; // Important. This is what renders the LaTeX\r\n//import \"./blog-template.css\" // Importing custom CSS goes here\r\n\r\nexport default function BlogPostTemplate({ data }) {\r\n  const { markdownRemark } = data;\r\n  const { frontmatter, html } = markdownRemark;\r\n// HTML Formatting and labeling for template\r\n  return (\r\n    &#x3C;div className=\"blog-post-container\">\r\n      &#x3C;div className=\"blog-post\">\r\n        &#x3C;h1>{frontmatter.title}&#x3C;/h1>\r\n        &#x3C;h2>{frontmatter.date}&#x3C;/h2>\r\n        &#x3C;div className=\"blog-post-content\" dangerouslySetInnerHTML={{ __html: html }} />\r\n      &#x3C;/div>\r\n    &#x3C;/div>\r\n  );\r\n}\r\n// GraphQL Query which grabs the content from your markdown file\r\nexport const pageQuery = graphql`\r\n  query($id: String!) {\r\n    markdownRemark(id: { eq: $id }) {\r\n      html\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        slug\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\n</code></pre>\n<ul>\n<li><strong>6. Start Development Server</strong></li>\n</ul>\n<p>If the configuration is correct, you should now be able to run your development server again. In a terminal enter:</p>\n<p><code>gatsby develop</code></p>\n<p>Now you should be able to visit the sample page at <a href=\"http://localhost:8000/\">http://localhost:8000/</a> and also your blog post at <a href=\"http://localhost:8000/blog/my-first-blog-post/\">http://localhost:8000/blog/my-first-blog-post/</a></p>","frontmatter":{"date":"August 25, 2023","slug":"my-first-blog-post","title":"Gatsby and Katex: Using Markdown to create posts with LaTeX format supported"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"slug":null,"title":""}}},{"node":{"frontmatter":{"slug":"test-post","title":"Test"}}},{"node":{"frontmatter":{"slug":"spectrogram-iq","title":"How to Look at a Spectrogram with IQEngine"}}},{"node":{"frontmatter":{"slug":"l-m-hdpc","title":"On Low, Medium, and High Density Parity Check Codes"}}},{"node":{"frontmatter":{"slug":"my-first-blog-post","title":"Gatsby and Katex: Using Markdown to create posts with LaTeX format supported"}}},{"node":{"frontmatter":{"slug":"a-dance-rhythm-game","title":"A Dance Rhythm Game using an LPC1769 Microcontroller and DE10-Lite FPGA"}}},{"node":{"frontmatter":{"slug":"dropping-needles-approximating-pi","title":"A Dance Rhythm Game using an LPC1769 Microcontroller and DE10-Lite FPGA"}}},{"node":{"frontmatter":{"slug":"cross-site-scripting","title":"Introduction to Cross-Site-Scripting"}}},{"node":{"frontmatter":{"slug":"ann-chess","title":"Chess Neural Networks"}}},{"node":{"frontmatter":{"slug":"antennas-from-military-handbook","title":"An Introduction to Antennas from the US Military Field Antenna Handbook"}}},{"node":{"frontmatter":{"slug":"fpga-resources","title":"FPGA Resources - Verilog/VHDL "}}},{"node":{"frontmatter":{"slug":"an-amplitude-modulator","title":"A Design and Implementation of a 100 kHz Amplitude Modulator Circuit Using Basic Components"}}}]}},"pageContext":{"id":"1e4c286d-83ce-59ba-a8f6-0bdf5a2064ad","frontmatter__slug":"my-first-blog-post","__params":{"frontmatter__slug":"my-first-blog-post"}}},"staticQueryHashes":[],"slicesMap":{}}