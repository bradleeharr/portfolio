{"componentChunkName":"component---src-pages-blog-markdown-remark-frontmatter-slug-jsx","path":"/blog/a-dance-rhythm-game/","result":{"data":{"markdownRemark":{"html":"<p><strong>Authors</strong>: Bradlee Harrison and <a href=\"https://www.linkedin.com/in/adam-tran-60a0b0268/\">Adam Tran</a></p>\n<h2>Introduction</h2>\n<p>The goal of our project was to emulate an arcade-style music rhythm game based on the music video game series <a href=\"https://www.ddrgame.com/\">Dance Dance Revolution</a>.</p>\n<p><img src=\"assets/images/782px-DanceDanceRevolution_White_Machine_with_DDR_A_installed.png\" alt=\"Example of Game Machine\"></p>\n<p><em>Image: LABcrabs 27 January 2019 | <a href=\"https://commons.wikimedia.org/wiki/File:DanceDanceRevolution_White_Machine_with_DDR_A_installed.png\">DanceDance Revolution</a> - A machine in Oakville, Ontario, Canada. Licensed under the <a href=\"https://en.wikipedia.org/wiki/en:Creative_Commons\">Creative Commons Attribution-Share Alike 4.0 International license</a>. No changes were made.</em></p>\n<h2>Design</h2>\n<p>We developed a basic dance pad game using an LPC1769 microcontroller and a DE-10 Lite FPGA.</p>\n<h3>Microcontroller</h3>\n<p>The microcontroller handles the user input from the dance pad, the game state logic, and the music output logic.</p>\n<h3>FPGA</h3>\n<p>The FPGA handles the processing of storing the display data, buffering it in its RAM and outputting the display information along with a vertical sync and horizontal sync to maintain the timing constraints of the VGA standard.</p>\n<p>![A block diagram of the system](assets/images/DDLBlockDiagram.drawio (1).png)</p>\n<h2>Capabilities</h2>\n<p>The microcontroller is capable of playing two different songs which are programmed into it.</p>\n<h3>Song Selection and Start Process</h3>\n<ul>\n<li>Turn on the microcontroller and FPGA</li>\n<li>Press the SELECT button to select the song from two different tracks.</li>\n<li>...</li>\n</ul>\n<h2>Software Description</h2>\n<h3>Input</h3>\n<p>The LPC1769 microcontroller receives digital input from a PlayStation 2 Dance Dance Revolution Regular Dance Pad.</p>\n<h3>Audio</h3>\n<p>The music is generated using the Digital-to-Analog Converter present on the LPC1769.</p>\n<h3>Display</h3>\n<p>The graphical video output is displayed using a data connection to a basic VGA controller implemented on a DE10-LITE FPGA board.</p>\n<p><img src=\"assets/images/ddl_vsync.png\" alt=\"VGA Signals\">\r\n<img src=\"assets/images/ddl_hsync.png\" alt=\"VGA Signals\">\r\n<img src=\"assets/images/ddl_colordataline.png\" alt=\"VGA Signals\"></p>\n<h3>Memory Buffering</h3>\n<p>The key to achieving seamless data handling and display was the implementation of a memory buffer using the FPGA.</p>\n<h3>UART Communications</h3>\n<p>To communicate from the LPC176 to the DE10-LITE FPGA board, we implemented a UART interface running at 900,000 baud rate.</p>\n<p><img src=\"assets/images/ddl_uart.png\" alt=\"Example UART Transaction\"></p>\n<h2>Hardware Description</h2>\n<p>Our audio hardware uses an audio amplifier connected to a speaker.</p>\n<p><img src=\"assets/images/ddl_fullschematic.png\" alt=\"Hardware Schematic\"></p>\n<h2>Final Screens and Circuits</h2>\n<p><img src=\"assets/images/ddl_screen.png\" alt=\"Final Screen of a Game\">\r\n<img src=\"assets/images/ddl_screen2.png\" alt=\"Test screen showing drawing of multiple rectangles for graphical output\">\r\n<img src=\"assets/images/ddl_breadboard_circuit.png\" alt=\"Final breadboarded circuit\"></p>","frontmatter":{"date":"December 15, 2022","slug":"a-dance-rhythm-game","title":"A Dance Rhythm Game using an LPC1769 Microcontroller and DE10-Lite FPGA"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"slug":null,"title":""}}},{"node":{"frontmatter":{"slug":"test-post","title":"Test"}}},{"node":{"frontmatter":{"slug":"spectrogram-iq","title":"How to Look at a Spectrogram with IQEngine"}}},{"node":{"frontmatter":{"slug":"l-m-hdpc","title":"On Low, Medium, and High Density Parity Check Codes"}}},{"node":{"frontmatter":{"slug":"my-first-blog-post","title":"Gatsby and Katex: Using Markdown to create posts with LaTeX format supported"}}},{"node":{"frontmatter":{"slug":"a-dance-rhythm-game","title":"A Dance Rhythm Game using an LPC1769 Microcontroller and DE10-Lite FPGA"}}},{"node":{"frontmatter":{"slug":"dropping-needles-approximating-pi","title":"A Dance Rhythm Game using an LPC1769 Microcontroller and DE10-Lite FPGA"}}},{"node":{"frontmatter":{"slug":"cross-site-scripting","title":"Introduction to Cross-Site-Scripting"}}},{"node":{"frontmatter":{"slug":"ann-chess","title":"Chess Neural Networks"}}},{"node":{"frontmatter":{"slug":"antennas-from-military-handbook","title":"An Introduction to Antennas from the US Military Field Antenna Handbook"}}},{"node":{"frontmatter":{"slug":"fpga-resources","title":"FPGA Resources - Verilog/VHDL "}}},{"node":{"frontmatter":{"slug":"an-amplitude-modulator","title":"A Design and Implementation of a 100 kHz Amplitude Modulator Circuit Using Basic Components"}}}]}},"pageContext":{"id":"a6aba163-e673-52a3-8ddc-24ef10e0a530","frontmatter__slug":"a-dance-rhythm-game","__params":{"frontmatter__slug":"a-dance-rhythm-game"}}},"staticQueryHashes":[],"slicesMap":{}}